MMO 관계형 데이터 베이스를 사용한다.
R(Relational)DB MS를 조작하기 위한 명령어
 T-SQL로 명칭이 바뀐다. 최대한 표준 SQL로 바꿔야함.
CRUD(Create-Read-Update-Delete)

nvarchar - n은 유니코드로 해석
DB는 깊게 이해하고 접근해야한다. 게임의 경우DB속도로도
게임 진행에 대해 큰 영향을 끼친다.

SUBSTRING :문자열 추출
날짜는 문자열로 들어가는데, 

FROM-> WHERE-> GROUP BY(분류)-> HAVING(분류 후 조건)-> SELECT->ORDER BY
PRIMARY KEY-> 인덱스에서 다루며 보면 열쇠 표시가 뜬다.
많은 데이터들에서 빠르게 찾기 위해 정렬시켜 두는 기준

정규화->테이블을 왜 분할 설계를 하는가?
아이템 코드외에 고유 아이디가 또 있어야 한다.
중복된 데이터가 발생하는 것을 부정적으로 생각해야함.


인덱스 ->이해를 못하면 DB를 이해하지 못 한것.
특정 데이터를 쉽게 찾기 위해 위치를 지정해 두는것
기본 이진 검색트리를 사용한다.
중복데이터가 없는 항목에 인덱스를 걸어야 한다.
PRIMARY KEY는 CLUSTERED INDEX이다. 테이블당 1개만 존재
-> 물리적인 데이터 저장 순서의 기준
NON CLUSTERED INDEX
-> 따로 관리하는 Look up 테이블

-------------------------------------------------- 회사 과제물
저장프로시저-DBMS에서 제공하는 프로그램 SQL
DB기능 이지만 프로그램이기 때문에 간단한 문법
인 IF, WHILE 등 프로그래밍 문법을 사용할 수 있고
프로시저를 호출할 때 매개변수를 받거나 전달

COUNT(*)OVER(PARTITION BY charunique) 
를 해줘야 숫자를 해야 원하는 부분만 숫자셀 수 있음.

Index, Transaction(트랜잭션) 
        캐릭터유니크


skillindex
 lv 10까지만 공짜고 한번을 더 사용해야 ->11
공짜로 11로 올라가는 스킬 + 버그찾기
i32index - 4
i32item index- 14

[charunique]  ,[skillindex]
217,801,211,215